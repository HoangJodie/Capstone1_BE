generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model chatbotqueries {
  query_id   Int       @id @default(autoincrement())
  user_id    Int?
  question   String?   @db.Text
  response   String?   @db.Text
  query_date DateTime? @default(now()) @db.Timestamp(0)

  @@index([user_id], map: "user_id")
}

/// This model has been renamed to 'Renamedclass' during introspection, because the original name 'class' is reserved.
model Renamedclass {
  class_id          Int       @id @default(autoincrement())
  class_name        String?   @db.VarChar(50)
  class_description String?   @db.VarChar(255)
  status_id         Int?
  class_type        Int?
  start_date        DateTime? @db.Date
  end_date          DateTime? @db.Date
  fee               Decimal?  @db.Decimal(10, 2)
  image_url         String?   @db.Text
  pt_id             Int?
  maxAttender       Int?
  class_subject     String?   @db.VarChar(20)

  @@index([status_id], map: "status_id")
  @@map("class")
}

model membership {
  membership_id    Int       @id @default(autoincrement())
  user_id          Int?
  membership_type  Int?
  start_date       DateTime? @db.Date
  end_date         DateTime? @db.Date
  price            Decimal?  @db.Decimal(10, 2)
  status_id        Int?
  payment_method   String?   @db.VarChar(20)
  order_id         String?   @unique @db.VarChar(255)
  quantity         Int?
  transaction_date DateTime  @default(now()) @db.DateTime(0)

  @@index([status_id], map: "status_id")
  @@index([user_id], map: "user_id")
  @@index([membership_type], map: "fk_membership_type")
}

model schedule {
  schedule_id Int       @id @default(autoincrement())
  class_id    Int?
  days        DateTime? @db.Date
  start_hour  DateTime? @db.Time(0)
  end_hour    DateTime? @db.Time(0)

  @@index([class_id], map: "fk_class_id")
}

model user {
  user_id         Int       @id @default(autoincrement())
  username        String?   @unique(map: "unique_username") @db.VarChar(64)
  password        String?   @db.VarChar(64)
  email           String    @db.VarChar(255)
  phoneNum        String?   @db.VarChar(20)
  role_id         Int?
  status_id       Int?
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
  name            String?   @db.VarChar(50)
  imgurl          String?   @db.Text
  PT_introduction String?   @db.Text

  @@index([role_id], map: "role_id")
  @@index([status_id], map: "status_id")
}

model user_class {
  user_id   Int
  class_id  Int
  status_id Int?

  @@id([user_id, class_id])
  @@index([class_id], map: "class_id")
  @@index([status_id], map: "status_id")
}

model exercisepost {
  post_id     Int       @id @default(autoincrement())
  exercise_id String    @db.VarChar(10)
  name        String    @db.VarChar(255)
  body_part   String    @db.VarChar(50)
  equipment   String?   @db.VarChar(50)
  target      String    @db.VarChar(100)
  gif_url     String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
}

model instructions {
  id          Int     @id @default(autoincrement())
  post_id     Int?
  step_number Int?
  instruction String? @db.Text

  @@index([post_id], map: "fk_post_instructions")
}

model secondarymuscles {
  id          Int     @id @default(autoincrement())
  post_id     Int?
  muscle_name String? @db.VarChar(100)

  @@index([post_id], map: "fk_post_secondarymuscles")
}

model class_transaction {
  class_transaction_id Int      @id @default(autoincrement())
  user_id              Int
  class_id             Int
  amount_paid          Decimal  @db.Decimal(10, 2)
  payment_date         DateTime @default(now()) @db.DateTime(0)
  status_id            Int?     @db.TinyInt
  payment_method       String?  @db.VarChar(20)
  order_id             String?  @db.VarChar(255)
}

model membership_description {
  membership_type Int     @id @default(autoincrement())
  name            String  @db.VarChar(255)
  description     String? @db.Text
  price           Decimal @db.Decimal(10, 2)
  duration        Int
}
